#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include "opencv2/imgproc/imgproc.hpp"
#include <iostream>

using namespace cv;
using namespace std;

int main( int argc, char** argv )
{
    if( argc != 2)
    {
     cout <<" Usage: display_image ImageToLoadAndDisplay" << endl;
     return -1;
    }

    Mat image;
    image = imread(argv[1]);   // Read the file

    if(! image.data )                              // Check for invalid input
    {
        cout <<  "Could not open or find the image" << std::endl ;
        return -1;
    }

    int rows = image.rows;
    int cols= image.cols;
    //gray= np.ndarray(shape=(s[0], s[1]), dtype=np.uint8)
    Mat gray(rows, cols, CV_8UC1);
    Mat grayM(rows, cols, CV_8UC1);
    
    Mat m = (Mat_<double>(1,3) << 0.1, 0.1, 0.9);

    //m= m.reshape((1,3));
    transform(image, gray, m); 
    
    //threshold
    threshold(gray, gray, 220, 255, CV_THRESH_BINARY);

    medianBlur(gray, grayM, 15);
    int cont=0;
   // cout << grayM << endl;


    for (int i=10; i <(rows-10); i++)
	for (int j=10; j <(cols-10); j++)
			if (grayM.at<unsigned char>(i,j) == 0) cont++;	
		
	
	
    cout << "pixels count %d" <<cont  << endl;

  //  namedWindow( "Display window", WINDOW_AUTOSIZE );// Create a window for display.
    
   // imshow( "Display window", grayM );                   // Show our image inside it.
   
  //  waitKey(0);                                          // Wait for a keystroke in the window
    return 0;
}

